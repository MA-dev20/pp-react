<div id="game_channel" data-game-id='<%= @game.id %>'></div>
<div class="navbar-links">
	<% if @turn.record_pitch && @admin.role != 'user' && @admin.role != 'inactive' %>
		<% if params[:process] && @game.state != 'play' %>
			<% redirect_to gm_game_path %>
		<% end %>
	<% end %>
</div>
<div class="head">
	<h1><%= @turn.user.fname %> pitcht!</h1>
	<h3><% if params[:process] %>Das Pitch-Video wird in einem Hintergrund Tab hochgeladen. Du kannst hier einfach weiterspielen.<% end %></h3>
</div>
<div class="middle">
	<div class="emojis">
		<div class="emoji" id='emoji_1' onanimationend="emojiEnd('emoji_1')" onclick="sendEmoji('&#x1f680;', 'emoji_1')">&#x1f680;</div>
		<div class="emoji" id='emoji_2' onanimationend="emojiEnd('emoji_2')" onclick="sendEmoji('&#x1f4aa;', 'emoji_2')">&#x1f4aa;</div>
		<div class="emoji" id='emoji_3' onanimationend="emojiEnd('emoji_3')" onclick="sendEmoji('&#x1f60e;', 'emoji_3')">&#x1f60e;</div>
		<div class="emoji" id='emoji_4' onanimationend="emojiEnd('emoji_4')" onclick="sendEmoji('&#x1f43a;', 'emoji_4')">&#x1f43a;</div>
		<div class="emoji" id='emoji_5' onanimationend="emojiEnd('emoji_5')" onclick="sendEmoji('&#x1F910;', 'emoji_5')">&#x1F910;</div>
		<div class="emoji" id='emoji_6' onanimationend="emojiEnd('emoji_6')" onclick="sendEmoji('&#x1f393;', 'emoji_6')">&#x1f393;</div>
		<div class="emoji" id='emoji_7' onanimationend="emojiEnd('emoji_7')" onclick="sendEmoji('&#x1f44c;', 'emoji_7')">&#x1f44c;</div>
		<div class="emoji" id='emoji_8' onanimationend="emojiEnd('emoji_8')" onclick="sendEmoji('&#x1f634;', 'emoji_8')">&#x1f634;</div>
		<div class="emoji" id='emoji_9' onanimationend="emojiEnd('emoji_9')" onclick="sendEmoji('&#x1f929;', 'emoji_9')">&#x1f929;</div>
		<div class="emoji" id='emoji_10' onanimationend="emojiEnd('emoji_10')" onclick="sendEmoji('&#x1f37e;', 'emoji_10')">&#x1f37e;</div>
		<div class="emoji" id='emoji_11' onanimationend="emojiEnd('emoji_11')" onclick="sendEmoji('&#x1f9e0;', 'emoji_11')">&#x1f9e0;</div>
		<div class="emoji" id='emoji_12' onanimationend="emojiEnd('emoji_12')" onclick="sendEmoji('&#x1f4b8;', 'emoji_12')">&#x1f4b8;</div>
	</div>
</div>
<div class="dots">
	<div class="dot"></div>
	<div class="dot"></div>
	<div class="dot"></div>
</div>
<div class="addTime">
	<div id="add10s">+10s<%= link_to '', gm_add_time_path(time: 10) %></div>
	<div id="add20s">+20s<%= link_to '', gm_add_time_path(time: 20) %></div>
	<div id="add30s">+30s<%= link_to '', gm_add_time_path(time: 30) %></div>
	<div class="time" onclick="showTime()"><i class="fas fa-stopwatch"></i></div>
</div>
<div class="bottom">
	 <% if @turn.record_pitch && @admin.role != 'user' && @admin.role != 'inactive' && params[:pitch] == 'record' %>
	 	<input type="file" id="pitch_video" name="video" accept="video/*" capture="enviroment" style="display: none">
		<button class="btn custom-btn" id="video-btn">Kamera öffnen</button>
	 <% else %>
	<%= form_for(:comment, url: new_comment_path(@turn), html: {id: "comment_form", autocomplete: 'off'}) do |f| %>
	<%= f.hidden_field :time, value: nil %>
	<%= f.hidden_field :user_id, value: @admin.id %>
	<%= f.hidden_field :positive, value: 'neutral' %>
	<div class="form-group">
		<%= f.text_field :text, placeholder: 'Feedback hier eingeben...', oninput: "inputSend()", onblur: 'inputSend()', class: 'form-field', maxlength: "30"%>
		<i class="far fa-paper-plane" id='comment_submit' onclick='submitComment()'></i>
	</div>
	<% end %>
	<% end %>
</div>
<script>
	function showTime() {
		$('#add10s').toggle();
		$('#add20s').toggle();
		$('#add30s').toggle();
	}
	function inputSend() {
		if ($('#comment_text').val() == '') {
		  $("#comment_submit").css({ opacity: .4 });
		} else {
		  $("#comment_submit").css({ opacity: 1 });
		}
	}
	function sendEmoji(emoji, id) {
		$('#'+id).addClass('emoji_send');
		$.ajax({
			url: "<%= gm_send_emoji_url.to_s %>?emoji=" + emoji,
			type: 'put',
			async: true,
			contentType: false,
			processData: false,
			beforeSend: function(xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
		});
	}
	function emojiEnd(id) {
		$('#'+id).removeClass('emoji_send');
	}
	function submitComment() {
		$('#comment_form').submit();
	}
	$('#comment_form').submit(function(e) {
		e.preventDefault();
		$('#comment_text').removeClass('red');
		if( $('#comment_text').val().length > 30) {
			$('#comment_text').addClass('red');
			$('#comment_text').val('');
			$('#comment_text').attr('placeholder', 'Bitte nicht mehr als 30 Zeichen!')
		} else if($('#comment_text').val().length != 0){
		var form = $(this);
		var url = "<%= new_comment_path(@turn, site: 'game') %>";
		$.ajax({
			type: 'post',
			url: url,
			data: form.serialize(),
			beforeSend: function(xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
			success: function(data) {
				$("#comment_text").val('');
				inputSend();

			}
		})
		}
	})
	$('#video-btn').click(function(e) {
		e.preventDefault();
		App.videoInProgress = true;
		setTimeout(function() {
		$.ajax({
			url: "<%= gm_set_timer_url(timer: "start") %>",
			type: 'put',
			async: true,
			contentType: false,
			processData: false,
			beforeSend: function(xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
		});
		}, 2000)
		$('#pitch_video').click();
	})
	var commentTimer = NaN;
	App.commentTimer = startCommentTimer();
	App.commentTimer.pause();
	$('#pitch_video').on('change', function(e) {
		$.ajax({
			url: "<%= gm_set_timer_url(timer: "stop") %>",
			type: 'put',
			async: true,
			contentType: false,
			processData: false,
			beforeSend: function(xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
		});
	 	App.commentTimer.stop();
		App.videoInProgress = false;
		let file = e.target.files[0];
		let blobURL = URL.createObjectURL(file)
		uploadVideo(blobURL, file);
	})
	function startCommentTimer() {
		commentTimer = 0;
		var setTimer = setInterval(function() {
			commentTimer++;
			$('#comment_time').val(commentTimer);
			console.log(commentTimer);
		}, 1000)
		var pause = function() { clearInterval(setTimer) };
		var resume = function() {
			setTimer = setInterval(function() {
				commentTimer++;
				$('#comment_time').val(commentTimer);
				console.log(commentTimer);
			}, 1000)
		}
		var restart = function() {
			commentTimer = 0;
			$('#comment_time').val(commentTimer);
			setTimer = setInterval(function() {
				commentTimer++;
				$('#comment_time').val(commentTimer);
				console.log(commentTimer);
			}, 1000)
		}
		var stop = function() {
			clearInterval(setTimer);
			commentTimer = NaN;
			$('#comment_time').val('');
		}
		return {pause: pause , resume: resume, restart: restart, stop: stop }
	}
	function uploadVideo(blobUrl, file) {
		App.game.unsubscribe();
		var file1 = new window.File([file], ['pitch_', (new Date() + '').slice(4, 28), '.mp4'].join(''));
		var form = new FormData();
		form.append('file', file1);
		window.open("<%= gm_game_url('', process: true) %>", '_blank');
		$('.head h1').text('Video Upload');
		$('.head h3').text('Tab nicht schließen!');
		$('.bottom').hide();
		var URL = "<%= upload_pitch_url(@turn) %>";
		$.ajax({
			url: URL,
			type: 'POST',
			data: form,
			async: true,
			contentType: false,
			processData: false,
			beforeSend: function(xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
			success: function(res) {
				$('.head h1').text('Video Upload fertig!');
				$('.head h3').text('Du kannst den Tab nun schließen!');
			}
		});
	}
</script>
