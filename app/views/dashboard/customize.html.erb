<div class="left customize-left small">
	<div class="card" id="catchwords" style="<%= @CL ? 'display:none' : '' %>">
		<h3>Catchwords <i class="fas fa-plus-circle add" onclick="toggleCatchword()"></i></h3>
		<div class="karten" id="CWkarten">
		<% @CLs.each do |w| %>
		<div class="karte" onclick="redirect('WL', '<%= w.id %>')">
			<div class="name"><%= w.name %></div>
			<div class="count"><%= w.catchwords.count %></div>
			<%= image_tag w.image_url, class: "image" %>
		</div>
		<% end %>
		</div>
	</div>
	<% if @CL %>
	<div class="card" id="editCatchword">
		<h3><i class="fas fa-arrow-left back" onclick="redirect('none', '0')"></i>Liste bearbeiten</h3>
		<%= link_to '', delete_list_path('word', @CL), class: 'far fa-trash-alt deleteList' %>
		<%= form_for(:list, url: edit_list_path(@CL)) do |f| %>
		<%= f.hidden_field :type, value: 'word' %>
		<div class="form-group">
			<label for="">Listenname</label>
			<%= f.text_field :name, value: @CL.name, class: 'form-field' %>
		</div>
		<% end %>
		<%= form_for(:entry, url: list_add_entry_path(@CL, type: 'word')) do |f| %>
		<div class="form-group">
			<label for="">Catchword hinzufügen</label>
			<%= f.text_field :name, class: 'form-field' %>
		</div>
		<% end %>
		<div class="form-group" style="border-bottom: 1px solid gray; margin-bottom: 0">
			<label for="">Catchwords</label>
		</div>
		<div class="table edit" id="edit-word">

		<table>
			<tbody>
				<% @CL.catchwords.each do |w| %>
				<tr id="word_<%=w.id%>">
					<td><%= w.name %></td>
					<td><i class="fas fa-microphone record" onclick="recordAudio(<%=w.id %>)"></i></td>
					<td>
						<% if w.sound? %>
						<i class="far fa-play-circle play" onclick="playAudio(<%= w.id %>)"></i>
						<%= audio_tag w.sound.url, id: 'wordSound' + w.id.to_s, onended: 'endedAudio('+w.id.to_s+')' %>
						<% else %>
						<i class="far fa-play-circle play disabled"></i>
						<% end %>
					</td>
					<td><i class="far fa-trash-alt delete" onclick="deleteWord(<%= w.id %>)"></i></td>
				</tr>
				<% end %>
			</tbody>
		</table>
		</div>
	</div>
	<script>
		new PerfectScrollbar('#editCatchword');
		var stream, form, globalForm,recorder, audio, timer;
  		globalForm = new FormData();
  		var processing= false;
  		audio = new Audio();
		
		function recordAudio(id) {
			if (!processing) {
				$('#word_' + id + ' .record').removeClass("fas");
				$('#word_' + id + ' .record').removeClass("fa-microphone");
				$('#word_' + id + ' .record').addClass("far");
				$('#word_' + id + ' .record').addClass("fa-pause-circle");
				requestAudio(id);
				processing = true;
			} else {
				stopRecording(id)
			}
		}
		function requestAudio(id) {
			var seconds = 10;
			if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
				navigator.mediaDevices.getUserMedia({audio: true}).then(function(str) {
					stream = str;
					recorder = new MediaRecorder(stream);
					let chunks = [];
					recorder.ondataavailable = function(e) {
						seconds -= 1;
						chunks.push(e.data);
						if (recorder.state == 'inactive') {
							const blob = new Blob(chunks, {type: 'audio/webm'});
							var file = new window.File([blob], ["audio", (new Date() + '').slice(4, 28), '.mp3'].join(''))
							globalForm.append('file', file);
							sendAudio(id, globalForm);
							processing = false;
						}
					};
					recorder.start(1000);
					timer = setTimeout(() => {
                		stopRecording(id)
            		}, 11000);
				})
			} else {
				alert('Konnte Aufnahme nicht starten!')
			}
		}
		function stopRecording(id) {
        	clearTimeout(timer);
        	if (recorder.state != 'inactive') {
				recorder.stop()
        	}
        	$('#word_' + id + ' .record').addClass("fas");
			$('#word_' + id + ' .record').addClass("fa-microphone");
			$('#word_' + id + ' .record').removeClass("far");
			$('#word_' + id + ' .record').removeClass("fa-pause-circle");
        	stream.getTracks()[0].stop()
    	}
		function sendAudio(id, globalForm) {
			var url = "/words/record/";
			$.ajax({
				url: url + id,
				type: "put",
				cache: false,
				async: true,
				contentType: false,
				processData: false,
				data: globalForm,
				beforeSend: function (xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
				success: function(res) {
					globalForm = new FormData();
					window.location.reload();
				}
			})
		}
		function playAudio(id) {
			var wordSound = document.getElementById('wordSound'+ id);
			if($('#word_'+ id + ' .play').hasClass('fa-play-circle')) {
				$('#word_'+ id + ' .play').removeClass('fa-play-circle');
				$('#word_'+ id + ' .play').addClass('fa-pause-circle');
				wordSound.play();
			} else {
				$('#word_'+ id + ' .play').removeClass('fa-pause-circle');
				$('#word_'+ id + ' .play').addClass('fa-play-circle');
				wordSound.pause();
			}	
		}
		function endedAudio(id) {
			var sound = document.getElementById('wordSound' + id);
			sound.load();
			$('#word_'+ id + ' .play').removeClass('fa-pause-circle');
			$('#word_'+ id + ' .play').addClass('fa-play-circle');
		}
		function deleteWord(id) {
			var url = '/delete/word/' + '<%= @CL.id %>' + '/' + id;
			$.ajax({
				url: url,
				type: 'get',
				cache: false,
				async: true,
				contentType: false,
				processData: false,
				beforeSend: function (xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
                success: function (res) {
					window.location.reload();
                }
			})
		}
		
	</script>
	<% end %>
	<div class="card" id="newCatchword" style="display:none">
		<h3><i class="fas fa-arrow-left back" onclick="toggleCatchword()"></i>Catchword hinzufügen</h3>
		<%= form_for(:list, url: new_list_path) do |f| %>
		<%= f.hidden_field :type, value: 'word' %>
		<div class="form-group">
			<label for="">Listenname</label>
			<%= f.text_field :name, class: 'form-field' %>
		</div>
		<%= f.submit 'speichern!', class: 'btn btn-green' %>
		<% end %>
	</div>
	<div class="card" id="objections" style="<%= @OL ? 'display:none' : '' %>">
		<h3>Einwände <i class="fas fa-plus-circle add" onclick="toggleObjection()"></i></h3>
		<div class="karten" id="OLkarten">
		<% @OLs.each do |o| %>
		<div class="karte" onclick="redirect('OL', '<%= o.id %>')">
			<div class="name"><%= o.name %></div>
			<div class="count"><%= o.objections.count %></div>
			<%= image_tag o.image_url, class: 'image' %>
		</div>
		<% end %>
		</div>
	</div>
	<div class="card" id="newObjection" style="display: none">
		<h3><i class="fas fa-arrow-left back" onclick="toggleObjection()"></i>Einwandliste hinzufügen</h3>
		<%= form_for(:list, url: new_list_path) do |f| %>
		<%= f.hidden_field :type, value: 'objection' %>
		<div class="form-group">
			<label for="">Listenname</label>
			<%= f.text_field :name, class: 'form-field' %>
		</div>
		<%= f.submit 'speichern!', class: 'btn btn-green' %>
		<% end %>
	</div>
	<% if @OL %>
	<div class="card" id="editObjection">
		<h3><i class="fas fa-arrow-left back" onclick="redirect('none', 'o')"></i>Liste bearbeiten</h3>
		<%= link_to '', delete_list_path('objection', @OL), class: 'far fa-trash-alt deleteList' %>
		<%= form_for(:list, url: edit_list_path(@OL)) do |f| %>
		<%= f.hidden_field :type, value: 'objection' %>
		<div class="form-group">
			<label for="">Listenname</label>
			<%= f.text_field :name, value: @OL.name, class: 'form-field' %>
		</div>
		<% end %>
		<%= form_for(:entry, url: list_add_entry_path(@OL, type: 'objection')) do |f| %>
		<div class="form-group">
			<label for="">Einwand hinzufügen</label>
			<%= f.text_field :name, class: 'form-field' %>
		</div>
		<% end %>
		<div class="form-group" style="border-bottom: 1px solid gray; margin-bottom: 0">
			<label for="">Einwände</label>
		</div>
		<div class="table edit" id="edit-objection">
		<table>
			<tbody>
			<% @OL.objections.each do |o| %>
				<tr id="objection_<%= o.id %>">
					<td><%= o.name %></td>
					<td><i class="fas fa-microphone record" onclick="recordAudio(<%= o.id %>)"></i></td>
					<td>
						<% if o.sound? %>
							<i class="far fa-play-circle play" onclick="playAudio(<%= o.id %>)"></i>
							<%= audio_tag o.sound.url, id: 'objectionSound' + o.id.to_s, onended: 'endedAudio('+o.id.to_s+')' %>
						<% else %>
							<i class="far fa-play-circle play disabled"></i>
						<% end %>
					</td>
					<td><i class="far fa-trash-alt delete" onclick="deleteObjection(<%= o.id %>)"></i></td>
				</tr>
			<% end %>
			</tbody>
		</table>
		</div>
	</div>
	<script>
		new PerfectScrollbar('#editObjection');
		var stream, form, globalForm,recorder, audio, timer;
			globalForm = new FormData();
			var processing= false;
			audio = new Audio();
		
		function recordAudio(id) {
			if (!processing) {
				$('#objection_' + id + ' .record').removeClass("fas");
				$('#objection_' + id + ' .record').removeClass("fa-microphone");
				$('#objection_' + id + ' .record').addClass("far");
				$('#objection_' + id + ' .record').addClass("fa-pause-circle");
				requestAudio(id);
				processing = true;
			} else {
				stopRecording(id)
			}
		}
		function requestAudio(id) {
			var seconds = 10;
			if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
				navigator.mediaDevices.getUserMedia({audio: true}).then(function(str) {
					stream = str;
					recorder = new MediaRecorder(stream);
					let chunks = [];
					recorder.ondataavailable = function(e) {
						seconds -= 1;
						chunks.push(e.data);
						if (recorder.state == 'inactive') {
							const blob = new Blob(chunks, {type: 'audio/webm'});
							var file = new window.File([blob], ["audio", (new Date() + '').slice(4, 28), '.mp3'].join(''))
							globalForm.append('file', file);
							sendAudio(id, globalForm);
							processing = false;
						}
					};
					recorder.start(1000);
					timer = setTimeout(() => {
						stopRecording(id)
					}, 11000);
				})
			} else {
				alert('Konnte Aufnahme nicht starten!')
			}
		}
		function stopRecording(id) {
			clearTimeout(timer);
			if (recorder.state != 'inactive') {
				recorder.stop()
			}
			$('#objection_' + id + ' .record').addClass("fas");
			$('#objection_' + id + ' .record').addClass("fa-microphone");
			$('#objection_' + id + ' .record').removeClass("far");
			$('#objection_' + id + ' .record').removeClass("fa-pause-circle");
			stream.getTracks()[0].stop()
		}
		function sendAudio(id, globalForm) {
			var url = "/objections/record/";
			$.ajax({
				url: url + id,
				type: "put",
				cache: false,
				async: true,
				contentType: false,
				processData: false,
				data: globalForm,
				beforeSend: function (xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
				success: function(res) {
					globalForm = new FormData();
					window.location.reload();
				}
			})
		}
		function playAudio(id) {
			var wordSound = document.getElementById('objectionSound'+ id);
			if($('#objection_'+ id + ' .play').hasClass('fa-play-circle')) {
				$('#objection_'+ id + ' .play').removeClass('fa-play-circle');
				$('#objection_'+ id + ' .play').addClass('fa-pause-circle');
				wordSound.play();
			} else {
				$('#objection_'+ id + ' .play').removeClass('fa-pause-circle');
				$('#objection_'+ id + ' .play').addClass('fa-play-circle');
				wordSound.pause();
			}	
		}
		function endedAudio(id) {
			var sound = document.getElementById('objectionSound' + id);
			sound.load();
			$('#objection_'+ id + ' .play').removeClass('fa-pause-circle');
			$('#objection_'+ id + ' .play').addClass('fa-play-circle');
		}
		function deleteObjection(id) {
			var url = '/delete/objection/<%= @OL.id %>/' + id;
			$.ajax({
				url: url,
				type: 'get',
				cache: false,
				async: true,
				contentType: false,
				processData: false,
				beforeSend: function (xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
				success: function (res) {
					window.location.reload();
				}
			})
		}
	</script>
	<% end %>
	<!-- <div class="card" id="scores" style="<%= @RL ? 'display:none' : '' %>">
		<h3>Bewertungen <i class="fas fa-plus-circle add" onclick="toggleScore()"></i></h3>
		<div class="karten" id="SLkarten">
		<% @RLs.each do |s| %>
		<div class="karte" onclick="redirect('SL', '<%= s.id %>')">
			<div class="name"><%= s.name %></div>
			<div class="count"><%= s.rating_criteria.count %></div>
			<%= image_tag s.image_url, class: 'image' %>
		</div>
		<% end %>
		</div>
	</div> -->
	<!-- <div class="card" id="newScore" style="display: none">
		<h3><i class="fas fa-arrow-left back" onclick="toggleScore()"></i>Score List hinzufügen</h3>
		<%= form_for(:list, url: new_list_path) do |f| %>
		<%= f.hidden_field :type, value: 'rating' %>
		<div class="form-group">
			<label for="">Listenname</label>
			<%= f.text_field :name, class: 'form-field' %>
		</div>
		<%= f.submit 'speichern!', class: 'btn btn-green' %>
		<% end %>
	</div>
	<% if @RL %>
	<div class="card" id="editScore">
		<h3><i class="fas fa-arrow-left back" onclick="redirect('none', 'o')"></i>Liste bearbeiten</h3>
		<%= link_to '', delete_list_path('score', @RL), class: 'far fa-trash-alt deleteList' %>
		<%= form_for(:list, url: edit_list_path(@RL)) do |f| %>
		<%= f.hidden_field :type, value: 'rating' %>
		<div class="form-group">
			<label for="">Listenname</label>
			<%= f.text_field :name, value: @RL.name, class: 'form-field' %>
		</div>
		<% end %>
		<%= form_for(:entry, url: list_add_entry_path(@RL, type: 'rating')) do |f| %>
		<div class="form-group">
			<label for="">Kriterium hinzufügen</label>
			<%= f.text_field :name, class: 'form-field' %>
		</div>
		<% end %>
		<div class="table edit" id="edit-score">
		<table>
			<tbody>
			<% @RL.rating_criteria.each do |s| %>
				<tr>
					<td><%= s.name %></td>
					<td></td>
					<td></td>
					<td><i class="far fa-trash-alt delete" onclick="deleteScore(<%= s.id %>)"></i></td>
				</tr>
			<% end %>
			</tbody>
		</table>
		</div>
	</div>
	<script>
		new PerfectScrollbar('#editScore');
		function deleteScore(id) {
			var url = '/delete/score/<%= @RL.id %>/' + id;
			$.ajax({
				url: url,
				type: 'get',
				cache: false,
				async: true,
				contentType: false,
				processData: false,
				beforeSend: function (xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
                success: function (res) {
					window.location.reload();
                }
			})
		}
	</script>
	<% end %> -->
</div>
<!-- <div class="right small"> -->
	<!-- <div class="card" id="objections" style="<%= @OL ? 'display:none' : '' %>">
		<h3>Einwände <i class="fas fa-plus-circle add" onclick="toggleObjection()"></i></h3>
		<div class="karten" id="OLkarten">
		<% @OLs.each do |o| %>
		<div class="karte" onclick="redirect('OL', '<%= o.id %>')">
			<div class="name"><%= o.name %></div>
			<div class="count"><%= o.objections.count %></div>
			<%= image_tag o.image_url, class: 'image' %>
		</div>
		<% end %>
		</div>
	</div>
	<div class="card" id="newObjection" style="display: none">
		<h3><i class="fas fa-arrow-left back" onclick="toggleObjection()"></i>Einwandliste hinzufügen</h3>
		<%= form_for(:list, url: new_list_path) do |f| %>
		<%= f.hidden_field :type, value: 'objection' %>
		<div class="form-group">
			<label for="">Listenname</label>
			<%= f.text_field :name, class: 'form-field' %>
		</div>
		<%= f.submit 'speichern!', class: 'btn btn-green' %>
		<% end %>
	</div>
	<% if @OL %>
	<div class="card" id="editObjection">
		<h3><i class="fas fa-arrow-left back" onclick="redirect('none', 'o')"></i>Liste bearbeiten</h3>
		<%= link_to '', delete_list_path('objection', @OL), class: 'far fa-trash-alt deleteList' %>
		<%= form_for(:list, url: edit_list_path(@OL)) do |f| %>
		<%= f.hidden_field :type, value: 'objection' %>
		<div class="form-group">
			<label for="">Listenname</label>
			<%= f.text_field :name, value: @OL.name, class: 'form-field' %>
		</div>
		<% end %>
		<%= form_for(:entry, url: list_add_entry_path(@OL, type: 'objection')) do |f| %>
		<div class="form-group">
			<label for="">Einwand hinzufügen</label>
			<%= f.text_field :name, class: 'form-field' %>
		</div>
		<% end %>
		<div class="form-group" style="border-bottom: 1px solid gray; margin-bottom: 0">
			<label for="">Einwände</label>
		</div>
		<div class="table edit" id="edit-objection">
		<table>
			<tbody>
			<% @OL.objections.each do |o| %>
				<tr id="objection_<%= o.id %>">
					<td><%= o.name %></td>
					<td><i class="fas fa-microphone record" onclick="recordAudio(<%= o.id %>)"></i></td>
					<td>
						<% if o.sound? %>
							<i class="far fa-play-circle play" onclick="playAudio(<%= o.id %>)"></i>
							<%= audio_tag o.sound.url, id: 'objectionSound' + o.id.to_s, onended: 'endedAudio('+o.id.to_s+')' %>
						<% else %>
							<i class="far fa-play-circle play disabled"></i>
						<% end %>
					</td>
					<td><i class="far fa-trash-alt delete" onclick="deleteObjection(<%= o.id %>)"></i></td>
				</tr>
			<% end %>
			</tbody>
		</table>
		</div>
	</div>
	<script>
		new PerfectScrollbar('#editObjection');
		var stream, form, globalForm,recorder, audio, timer;
  		globalForm = new FormData();
  		var processing= false;
  		audio = new Audio();
		
		function recordAudio(id) {
			if (!processing) {
				$('#objection_' + id + ' .record').removeClass("fas");
				$('#objection_' + id + ' .record').removeClass("fa-microphone");
				$('#objection_' + id + ' .record').addClass("far");
				$('#objection_' + id + ' .record').addClass("fa-pause-circle");
				requestAudio(id);
				processing = true;
			} else {
				stopRecording(id)
			}
		}
		function requestAudio(id) {
			var seconds = 10;
			if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
				navigator.mediaDevices.getUserMedia({audio: true}).then(function(str) {
					stream = str;
					recorder = new MediaRecorder(stream);
					let chunks = [];
					recorder.ondataavailable = function(e) {
						seconds -= 1;
						chunks.push(e.data);
						if (recorder.state == 'inactive') {
							const blob = new Blob(chunks, {type: 'audio/webm'});
							var file = new window.File([blob], ["audio", (new Date() + '').slice(4, 28), '.mp3'].join(''))
							globalForm.append('file', file);
							sendAudio(id, globalForm);
							processing = false;
						}
					};
					recorder.start(1000);
					timer = setTimeout(() => {
                		stopRecording(id)
            		}, 11000);
				})
			} else {
				alert('Konnte Aufnahme nicht starten!')
			}
		}
		function stopRecording(id) {
        	clearTimeout(timer);
        	if (recorder.state != 'inactive') {
				recorder.stop()
        	}
        	$('#objection_' + id + ' .record').addClass("fas");
			$('#objection_' + id + ' .record').addClass("fa-microphone");
			$('#objection_' + id + ' .record').removeClass("far");
			$('#objection_' + id + ' .record').removeClass("fa-pause-circle");
        	stream.getTracks()[0].stop()
    	}
		function sendAudio(id, globalForm) {
			var url = "/objections/record/";
			$.ajax({
				url: url + id,
				type: "put",
				cache: false,
				async: true,
				contentType: false,
				processData: false,
				data: globalForm,
				beforeSend: function (xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
				success: function(res) {
					globalForm = new FormData();
					window.location.reload();
				}
			})
		}
		function playAudio(id) {
			var wordSound = document.getElementById('objectionSound'+ id);
			if($('#objection_'+ id + ' .play').hasClass('fa-play-circle')) {
				$('#objection_'+ id + ' .play').removeClass('fa-play-circle');
				$('#objection_'+ id + ' .play').addClass('fa-pause-circle');
				wordSound.play();
			} else {
				$('#objection_'+ id + ' .play').removeClass('fa-pause-circle');
				$('#objection_'+ id + ' .play').addClass('fa-play-circle');
				wordSound.pause();
			}	
		}
		function endedAudio(id) {
			var sound = document.getElementById('objectionSound' + id);
			sound.load();
			$('#objection_'+ id + ' .play').removeClass('fa-pause-circle');
			$('#objection_'+ id + ' .play').addClass('fa-play-circle');
		}
		function deleteObjection(id) {
			var url = '/delete/objection/<%= @OL.id %>/' + id;
			$.ajax({
				url: url,
				type: 'get',
				cache: false,
				async: true,
				contentType: false,
				processData: false,
				beforeSend: function (xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
                success: function (res) {
					window.location.reload();
                }
			})
		}
	</script>
	<% end %> -->
	<!-- <div class="card">
		<h3>Wortwahl</h3>
		<div class="choose" id="wordChoosen" onclick="toggleWordOptions()">Do say</div>
		<div class="options" id="wordOptions">
			<div id="do" onclick="toggleWORDS('do')">Do say</div>
			<div id="dont" onclick="toggleWORDS('dont')">Don't say</div>
		</div>
		<%= form_for(:word, url: new_do_and_dont_path, html: {id: 'do-form'}) do |f| %>
		<div class="form-group">
			<label for="">Do say Wort hinzufügen</label>
			<%= f.text_field :do, class: 'form-field' %>
		</div>
		<% end %>
		<%= form_for(:word, url: new_do_and_dont_path, html: {id: 'dont-form', style: 'display: none'}) do |f| %>
		<div class="form-group">
			<label for="">Don't say Wort hinzufügen</label>
			<%= f.text_field :dont, class: 'form-field' %>
		</div>
		<% end %>
		<div class="table" id="do-say">
			<table>
				<tbody>
					<% if @admin.do_and_dont %>
					<% @admin.do_and_dont.does.each do |dw| %>
					<tr>
						<td><%= dw %></td>
						<td><%= link_to "", delete_doAndDont_path(word: dw, do: "do"), class: 'far fa-trash-alt delete' %></td>
					</tr>
					<% end end %>
				</tbody>
			</table>
		</div>
		<div class="table" id="dont-say" style="display: none">
			<table>
				<tbody>
					<% if @admin.do_and_dont %>
					<% @admin.do_and_dont.donts.each do |dw| %>
					<tr>
						<td><%= dw %></td>
						<td><%= link_to "", delete_doAndDont_path(word: dw, do: "dont"), class: 'far fa-trash-alt delete' %></td>
					</tr>
					<% end end %>
				</tbody>
			</table>
		</div>
	</div> -->
<!-- </div> -->
<script>
	
	function toggleCatchword() {
		$('#catchwords').toggle();
		$('#newCatchword').toggle();
	}
	function toggleScore() {
		$('#scores').toggle();
		$('#newScore').toggle();
	}
	function toggleObjection() {
		$('#objections').toggle();
		$('#newObjection').toggle();
	}
	function toggleWordOptions() {
		$('#wordOptions').toggle();
	}
	function toggleWORDS(type) {
		if (type == 'do') {
			$('#wordChoosen').text('Do say');
			$('#do-say').show();
			$('#dont-say').hide();
			$('#wordOptions').hide();
			$('#do-form').show();
			$('#dont-form').hide();
		} else if (type == 'dont') {
			$('#wordChoosen').text("Don't say");
			$('#do-say').hide();
			$('#dont-say').show();
			$('#wordOptions').hide();
			$('#do-form').hide();
			$('#dont-form').show();
		}
	}
	<% if params[:words] == 'dont' %>
		toggleWORDS('dont');
	<% end %>
	function redirect(type, id) {
		if (type == "WL") {var url = "<%= dashboard_customize_url %>" + '?CL='+ id}
		if (type == "SL") {var url = "<%= dashboard_customize_url %>" + '?RL='+ id}
	    if (type == "OL") {var url = "<%= dashboard_customize_url %>" + '?OL='+ id}
		if (type == 'none') {var url = '<%= dashboard_customize_url %>'}
		location.replace(url);
	}
	new PerfectScrollbar('#CWkarten');
	new PerfectScrollbar('#SLkarten');
	new PerfectScrollbar('#OLkarten');
    new PerfectScrollbar('#dont-say');
    new PerfectScrollbar('#do-say');
</script>